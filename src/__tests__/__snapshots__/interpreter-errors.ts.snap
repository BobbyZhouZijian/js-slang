// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Access local property: expectResult 1`] = `
Object {
  "alertResult": Array [],
  "code": "({a: 0})[\\"a\\"];",
  "displayResult": Array [],
  "errors": Array [],
  "parsedErrors": "",
  "result": 0,
  "resultStatus": "finished",
  "visualiseListResult": Array [],
}
`;

exports[`Builtins don't create additional errors when it's not their fault: expectParsedError 1`] = `
Object {
  "alertResult": Array [],
  "code": "function f(x) {
  return a;
}
map(f, list(1, 2));",
  "displayResult": Array [],
  "errors": Array [
    UndefinedVariable {
      "location": SourceLocation {
        "end": Position {
          "column": 10,
          "line": 2,
        },
        "start": Position {
          "column": 9,
          "line": 2,
        },
      },
      "name": "a",
      "severity": "Error",
      "type": "Runtime",
    },
  ],
  "parsedErrors": "Line 2: Name a not declared",
  "result": undefined,
  "resultStatus": "error",
  "visualiseListResult": Array [],
}
`;

exports[`Error when accessing inherited property of object: expectParsedError 1`] = `
Object {
  "alertResult": Array [],
  "code": "({}).valueOf;",
  "displayResult": Array [],
  "errors": Array [
    GetInheritedPropertyError {
      "location": SourceLocation {
        "end": Position {
          "column": 12,
          "line": 1,
        },
        "start": Position {
          "column": 0,
          "line": 1,
        },
      },
      "obj": Object {},
      "prop": "valueOf",
      "severity": "Error",
      "type": "Runtime",
    },
  ],
  "parsedErrors": "Line 1: Cannot read inherited property valueOf of {}",
  "result": undefined,
  "resultStatus": "error",
  "visualiseListResult": Array [],
}
`;

exports[`Error when assigning to builtin: expectParsedError 1`] = `
Object {
  "alertResult": Array [],
  "code": "map = 5;",
  "displayResult": Array [],
  "errors": Array [
    ConstAssignment {
      "location": SourceLocation {
        "end": Position {
          "column": 7,
          "line": 1,
        },
        "start": Position {
          "column": 0,
          "line": 1,
        },
      },
      "name": "map",
      "severity": "Error",
      "type": "Runtime",
    },
  ],
  "parsedErrors": "Line 1: Cannot assign new value to constant map",
  "result": undefined,
  "resultStatus": "error",
  "visualiseListResult": Array [],
}
`;

exports[`Error when assigning to builtin: expectParsedError 2`] = `
Object {
  "alertResult": Array [],
  "code": "undefined = 5;",
  "displayResult": Array [],
  "errors": Array [
    ConstAssignment {
      "location": SourceLocation {
        "end": Position {
          "column": 13,
          "line": 1,
        },
        "start": Position {
          "column": 0,
          "line": 1,
        },
      },
      "name": "undefined",
      "severity": "Error",
      "type": "Runtime",
    },
  ],
  "parsedErrors": "Line 1: Cannot assign new value to constant undefined",
  "result": undefined,
  "resultStatus": "error",
  "visualiseListResult": Array [],
}
`;

exports[`Error when calling arrow function with too few arguments: expectParsedError 1`] = `
Object {
  "alertResult": Array [],
  "code": "const f = x => x;
f();",
  "displayResult": Array [],
  "errors": Array [
    InvalidNumberOfArguments {
      "expected": 1,
      "got": 0,
      "location": SourceLocation {
        "end": Position {
          "column": 3,
          "line": 2,
        },
        "start": Position {
          "column": 0,
          "line": 2,
        },
      },
      "severity": "Error",
      "type": "Runtime",
    },
  ],
  "parsedErrors": "Line 2: Expected 1 arguments, but got 0",
  "result": undefined,
  "resultStatus": "error",
  "visualiseListResult": Array [],
}
`;

exports[`Error when calling arrow function with too many arguments: expectParsedError 1`] = `
Object {
  "alertResult": Array [],
  "code": "const f = x => x;
f(1, 2);",
  "displayResult": Array [],
  "errors": Array [
    InvalidNumberOfArguments {
      "expected": 1,
      "got": 2,
      "location": SourceLocation {
        "end": Position {
          "column": 7,
          "line": 2,
        },
        "start": Position {
          "column": 0,
          "line": 2,
        },
      },
      "severity": "Error",
      "type": "Runtime",
    },
  ],
  "parsedErrors": "Line 2: Expected 1 arguments, but got 2",
  "result": undefined,
  "resultStatus": "error",
  "visualiseListResult": Array [],
}
`;

exports[`Error when calling function with too few arguments: expectParsedError 1`] = `
Object {
  "alertResult": Array [],
  "code": "function f(x) {
  return x;
}
f();",
  "displayResult": Array [],
  "errors": Array [
    InvalidNumberOfArguments {
      "expected": 1,
      "got": 0,
      "location": SourceLocation {
        "end": Position {
          "column": 3,
          "line": 4,
        },
        "start": Position {
          "column": 0,
          "line": 4,
        },
      },
      "severity": "Error",
      "type": "Runtime",
    },
  ],
  "parsedErrors": "Line 4: Expected 1 arguments, but got 0",
  "result": undefined,
  "resultStatus": "error",
  "visualiseListResult": Array [],
}
`;

exports[`Error when calling function with too many arguments: expectParsedError 1`] = `
Object {
  "alertResult": Array [],
  "code": "function f(x) {
  return x;
}
f(1, 2);",
  "displayResult": Array [],
  "errors": Array [
    InvalidNumberOfArguments {
      "expected": 1,
      "got": 2,
      "location": SourceLocation {
        "end": Position {
          "column": 7,
          "line": 4,
        },
        "start": Position {
          "column": 0,
          "line": 4,
        },
      },
      "severity": "Error",
      "type": "Runtime",
    },
  ],
  "parsedErrors": "Line 4: Expected 1 arguments, but got 2",
  "result": undefined,
  "resultStatus": "error",
  "visualiseListResult": Array [],
}
`;

exports[`Error when calling non function value "string": expectParsedError 1`] = `
Object {
  "alertResult": Array [],
  "code": "'string'();",
  "displayResult": Array [],
  "errors": Array [
    CallingNonFunctionValue {
      "callee": "string",
      "location": SourceLocation {
        "end": Position {
          "column": 10,
          "line": 1,
        },
        "start": Position {
          "column": 0,
          "line": 1,
        },
      },
      "severity": "Error",
      "type": "Runtime",
    },
  ],
  "parsedErrors": "Line 1: Calling non-function value \\"string\\"",
  "result": undefined,
  "resultStatus": "error",
  "visualiseListResult": Array [],
}
`;

exports[`Error when calling non function value 0: expectParsedError 1`] = `
Object {
  "alertResult": Array [],
  "code": "0();",
  "displayResult": Array [],
  "errors": Array [
    CallingNonFunctionValue {
      "callee": 0,
      "location": SourceLocation {
        "end": Position {
          "column": 3,
          "line": 1,
        },
        "start": Position {
          "column": 0,
          "line": 1,
        },
      },
      "severity": "Error",
      "type": "Runtime",
    },
  ],
  "parsedErrors": "Line 1: Calling non-function value 0",
  "result": undefined,
  "resultStatus": "error",
  "visualiseListResult": Array [],
}
`;

exports[`Error when calling non function value array: expectParsedError 1`] = `
Object {
  "alertResult": Array [],
  "code": "[1]();",
  "displayResult": Array [],
  "errors": Array [
    CallingNonFunctionValue {
      "callee": Array [
        1,
      ],
      "location": SourceLocation {
        "end": Position {
          "column": 5,
          "line": 1,
        },
        "start": Position {
          "column": 0,
          "line": 1,
        },
      },
      "severity": "Error",
      "type": "Runtime",
    },
  ],
  "parsedErrors": "Line 1: Calling non-function value [1]",
  "result": undefined,
  "resultStatus": "error",
  "visualiseListResult": Array [],
}
`;

exports[`Error when calling non function value null: expectParsedError 1`] = `
Object {
  "alertResult": Array [],
  "code": "null();",
  "displayResult": Array [],
  "errors": Array [
    NoNullError {
      "node": Node {
        "end": 4,
        "loc": SourceLocation {
          "end": Position {
            "column": 4,
            "line": 1,
          },
          "start": Position {
            "column": 0,
            "line": 1,
          },
        },
        "raw": "null",
        "start": 0,
        "type": "Literal",
        "value": null,
      },
      "severity": "Error",
      "type": "Syntax",
    },
  ],
  "parsedErrors": "Line 1: null literals are not allowed",
  "result": undefined,
  "resultStatus": "error",
  "visualiseListResult": Array [],
}
`;

exports[`Error when calling non function value object: expectParsedError 1`] = `
Object {
  "alertResult": Array [],
  "code": "({a: 1})();",
  "displayResult": Array [],
  "errors": Array [
    CallingNonFunctionValue {
      "callee": Object {
        "a": 1,
      },
      "location": SourceLocation {
        "end": Position {
          "column": 10,
          "line": 1,
        },
        "start": Position {
          "column": 0,
          "line": 1,
        },
      },
      "severity": "Error",
      "type": "Runtime",
    },
  ],
  "parsedErrors": "Line 1: Calling non-function value {\\"a\\": 1}",
  "result": undefined,
  "resultStatus": "error",
  "visualiseListResult": Array [],
}
`;

exports[`Error when calling non function value true: expectParsedError 1`] = `
Object {
  "alertResult": Array [],
  "code": "true();",
  "displayResult": Array [],
  "errors": Array [
    CallingNonFunctionValue {
      "callee": true,
      "location": SourceLocation {
        "end": Position {
          "column": 6,
          "line": 1,
        },
        "start": Position {
          "column": 0,
          "line": 1,
        },
      },
      "severity": "Error",
      "type": "Runtime",
    },
  ],
  "parsedErrors": "Line 1: Calling non-function value true",
  "result": undefined,
  "resultStatus": "error",
  "visualiseListResult": Array [],
}
`;

exports[`Error when calling non function value undefined: expectParsedError 1`] = `
Object {
  "alertResult": Array [],
  "code": "undefined();",
  "displayResult": Array [],
  "errors": Array [
    CallingNonFunctionValue {
      "callee": undefined,
      "location": SourceLocation {
        "end": Position {
          "column": 11,
          "line": 1,
        },
        "start": Position {
          "column": 0,
          "line": 1,
        },
      },
      "severity": "Error",
      "type": "Runtime",
    },
  ],
  "parsedErrors": "Line 1: Calling non-function value undefined",
  "result": undefined,
  "resultStatus": "error",
  "visualiseListResult": Array [],
}
`;

exports[`Error when redeclaring constant as variable: expectParsedError 1`] = `
Object {
  "alertResult": Array [],
  "code": "const f = x => x;
let f = x => x;",
  "displayResult": Array [],
  "errors": Array [
    FatalSyntaxError {
      "location": Object {
        "end": Object {
          "column": 5,
          "line": 2,
        },
        "start": Object {
          "column": 4,
          "line": 2,
        },
      },
      "message": "SyntaxError: Identifier 'f' has already been declared (2:4)",
      "severity": "Error",
      "type": "Syntax",
    },
  ],
  "parsedErrors": "Line 2: SyntaxError: Identifier 'f' has already been declared (2:4)",
  "result": undefined,
  "resultStatus": "error",
  "visualiseListResult": Array [],
}
`;

exports[`Error when redeclaring constant: expectParsedError 1`] = `
Object {
  "alertResult": Array [],
  "code": "const f = x => x;
const f = x => x;",
  "displayResult": Array [],
  "errors": Array [
    FatalSyntaxError {
      "location": Object {
        "end": Object {
          "column": 7,
          "line": 2,
        },
        "start": Object {
          "column": 6,
          "line": 2,
        },
      },
      "message": "SyntaxError: Identifier 'f' has already been declared (2:6)",
      "severity": "Error",
      "type": "Syntax",
    },
  ],
  "parsedErrors": "Line 2: SyntaxError: Identifier 'f' has already been declared (2:6)",
  "result": undefined,
  "resultStatus": "error",
  "visualiseListResult": Array [],
}
`;

exports[`Error when redeclaring variable as constant: expectParsedError 1`] = `
Object {
  "alertResult": Array [],
  "code": "let f = x => x;
const f = x => x;",
  "displayResult": Array [],
  "errors": Array [
    FatalSyntaxError {
      "location": Object {
        "end": Object {
          "column": 7,
          "line": 2,
        },
        "start": Object {
          "column": 6,
          "line": 2,
        },
      },
      "message": "SyntaxError: Identifier 'f' has already been declared (2:6)",
      "severity": "Error",
      "type": "Syntax",
    },
  ],
  "parsedErrors": "Line 2: SyntaxError: Identifier 'f' has already been declared (2:6)",
  "result": undefined,
  "resultStatus": "error",
  "visualiseListResult": Array [],
}
`;

exports[`Error when redeclaring variable: expectParsedError 1`] = `
Object {
  "alertResult": Array [],
  "code": "let f = x => x;
let f = x => x;",
  "displayResult": Array [],
  "errors": Array [
    FatalSyntaxError {
      "location": Object {
        "end": Object {
          "column": 5,
          "line": 2,
        },
        "start": Object {
          "column": 4,
          "line": 2,
        },
      },
      "message": "SyntaxError: Identifier 'f' has already been declared (2:4)",
      "severity": "Error",
      "type": "Syntax",
    },
  ],
  "parsedErrors": "Line 2: SyntaxError: Identifier 'f' has already been declared (2:4)",
  "result": undefined,
  "resultStatus": "error",
  "visualiseListResult": Array [],
}
`;

exports[`Nice errors when errors occur inside builtins: expectParsedError 1`] = `
Object {
  "alertResult": Array [],
  "code": "parse_int(\\"10\\");",
  "displayResult": Array [],
  "errors": Array [
    ExceptionError {
      "error": [Error: parse_int expects two arguments a string s, and a positive integer i between 2 and 36, inclusive.],
      "location": SourceLocation {
        "end": Position {
          "column": 15,
          "line": 1,
        },
        "start": Position {
          "column": 0,
          "line": 1,
        },
      },
      "severity": "Error",
      "type": "Runtime",
    },
  ],
  "parsedErrors": "Line 1: Error: parse_int expects two arguments a string s, and a positive integer i between 2 and 36, inclusive.",
  "result": undefined,
  "resultStatus": "error",
  "visualiseListResult": Array [],
}
`;

exports[`Nice errors when errors occur inside builtins: expectParsedError 2`] = `
Object {
  "alertResult": Array [],
  "code": "parse(\\"'\\");",
  "displayResult": Array [],
  "errors": Array [
    ExceptionError {
      "error": [ParseError: SyntaxError: Unterminated string constant (1:0)],
      "location": SourceLocation {
        "end": Position {
          "column": 10,
          "line": 1,
        },
        "start": Position {
          "column": 0,
          "line": 1,
        },
      },
      "severity": "Error",
      "type": "Runtime",
    },
  ],
  "parsedErrors": "Line 1: ParseError: SyntaxError: Unterminated string constant (1:0)",
  "result": undefined,
  "resultStatus": "error",
  "visualiseListResult": Array [],
}
`;

exports[`Runtime error when redeclaring constant 1`] = `
Object {
  "context": Object {
    "chapter": 3,
    "debugger": Object {
      "observers": Object {
        "callbacks": Array [],
      },
      "state": Object {
        "it": Object {},
        "scheduler": PreemptiveScheduler {
          "steps": 1000,
        },
      },
      "status": false,
    },
    "errors": Array [],
    "externalContext": undefined,
    "externalSymbols": Array [],
    "runtime": Object {
      "break": false,
      "debuggerOn": true,
      "frames": Array [
        Object {
          "environment": Object {
            "Infinity": Infinity,
            "NaN": NaN,
            "accumulate": [Function],
            "append": [Function],
            "array_length": [Function],
            "build_list": [Function],
            "display": [Function],
            "draw_list": [Function],
            "enum_list": [Function],
            "equal": [Function],
            "error": [Function],
            "f": [Function],
            "filter": [Function],
            "for_each": [Function],
            "head": [Function],
            "is_array": [Function],
            "is_boolean": [Function],
            "is_function": [Function],
            "is_list": [Function],
            "is_null": [Function],
            "is_number": [Function],
            "is_pair": [Function],
            "is_string": [Function],
            "is_undefined": [Function],
            "length": [Function],
            "list": [Function],
            "list_ref": [Function],
            "list_to_string": [Function],
            "map": [Function],
            "math_E": 2.718281828459045,
            "math_LN10": 2.302585092994046,
            "math_LN2": 0.6931471805599453,
            "math_LOG10E": 0.4342944819032518,
            "math_LOG2E": 1.4426950408889634,
            "math_PI": 3.141592653589793,
            "math_SQRT1_2": 0.7071067811865476,
            "math_SQRT2": 1.4142135623730951,
            "math_abs": [Function],
            "math_acos": [Function],
            "math_acosh": [Function],
            "math_asin": [Function],
            "math_asinh": [Function],
            "math_atan": [Function],
            "math_atan2": [Function],
            "math_atanh": [Function],
            "math_cbrt": [Function],
            "math_ceil": [Function],
            "math_clz32": [Function],
            "math_cos": [Function],
            "math_cosh": [Function],
            "math_exp": [Function],
            "math_expm1": [Function],
            "math_floor": [Function],
            "math_fround": [Function],
            "math_hypot": [Function],
            "math_imul": [Function],
            "math_log": [Function],
            "math_log10": [Function],
            "math_log1p": [Function],
            "math_log2": [Function],
            "math_max": [Function],
            "math_min": [Function],
            "math_pow": [Function],
            "math_random": [Function],
            "math_round": [Function],
            "math_sign": [Function],
            "math_sin": [Function],
            "math_sinh": [Function],
            "math_sqrt": [Function],
            "math_tan": [Function],
            "math_tanh": [Function],
            "math_trunc": [Function],
            "member": [Function],
            "null": null,
            "pair": [Function],
            "parse_int": [Function],
            "prompt": [Function],
            "raw_display": [Function],
            "remove": [Function],
            "remove_all": [Function],
            "reverse": [Function],
            "runtime": [Function],
            "set_head": [Function],
            "set_tail": [Function],
            "stringify": [Function],
            "tail": [Function],
            "undefined": undefined,
          },
          "name": "global",
          "parent": null,
        },
      ],
      "isRunning": false,
      "nodes": Array [],
      "value": undefined,
    },
  },
  "status": "finished",
  "value": undefined,
}
`;

exports[`Runtime error when redeclaring constant 2`] = `""`;

exports[`Runtime error when redeclaring constant 3`] = `
Object {
  "status": "error",
}
`;

exports[`Runtime error when redeclaring constant 4`] = `"Line 2: Redeclaring name f"`;

exports[`Runtime error when redeclaring constant as function 1`] = `
Object {
  "context": Object {
    "chapter": 3,
    "debugger": Object {
      "observers": Object {
        "callbacks": Array [],
      },
      "state": Object {
        "it": Object {},
        "scheduler": PreemptiveScheduler {
          "steps": 1000,
        },
      },
      "status": false,
    },
    "errors": Array [],
    "externalContext": undefined,
    "externalSymbols": Array [],
    "runtime": Object {
      "break": false,
      "debuggerOn": true,
      "frames": Array [
        Object {
          "environment": Object {
            "Infinity": Infinity,
            "NaN": NaN,
            "accumulate": [Function],
            "append": [Function],
            "array_length": [Function],
            "build_list": [Function],
            "display": [Function],
            "draw_list": [Function],
            "enum_list": [Function],
            "equal": [Function],
            "error": [Function],
            "f": [Function],
            "filter": [Function],
            "for_each": [Function],
            "head": [Function],
            "is_array": [Function],
            "is_boolean": [Function],
            "is_function": [Function],
            "is_list": [Function],
            "is_null": [Function],
            "is_number": [Function],
            "is_pair": [Function],
            "is_string": [Function],
            "is_undefined": [Function],
            "length": [Function],
            "list": [Function],
            "list_ref": [Function],
            "list_to_string": [Function],
            "map": [Function],
            "math_E": 2.718281828459045,
            "math_LN10": 2.302585092994046,
            "math_LN2": 0.6931471805599453,
            "math_LOG10E": 0.4342944819032518,
            "math_LOG2E": 1.4426950408889634,
            "math_PI": 3.141592653589793,
            "math_SQRT1_2": 0.7071067811865476,
            "math_SQRT2": 1.4142135623730951,
            "math_abs": [Function],
            "math_acos": [Function],
            "math_acosh": [Function],
            "math_asin": [Function],
            "math_asinh": [Function],
            "math_atan": [Function],
            "math_atan2": [Function],
            "math_atanh": [Function],
            "math_cbrt": [Function],
            "math_ceil": [Function],
            "math_clz32": [Function],
            "math_cos": [Function],
            "math_cosh": [Function],
            "math_exp": [Function],
            "math_expm1": [Function],
            "math_floor": [Function],
            "math_fround": [Function],
            "math_hypot": [Function],
            "math_imul": [Function],
            "math_log": [Function],
            "math_log10": [Function],
            "math_log1p": [Function],
            "math_log2": [Function],
            "math_max": [Function],
            "math_min": [Function],
            "math_pow": [Function],
            "math_random": [Function],
            "math_round": [Function],
            "math_sign": [Function],
            "math_sin": [Function],
            "math_sinh": [Function],
            "math_sqrt": [Function],
            "math_tan": [Function],
            "math_tanh": [Function],
            "math_trunc": [Function],
            "member": [Function],
            "null": null,
            "pair": [Function],
            "parse_int": [Function],
            "prompt": [Function],
            "raw_display": [Function],
            "remove": [Function],
            "remove_all": [Function],
            "reverse": [Function],
            "runtime": [Function],
            "set_head": [Function],
            "set_tail": [Function],
            "stringify": [Function],
            "tail": [Function],
            "undefined": undefined,
          },
          "name": "global",
          "parent": null,
        },
      ],
      "isRunning": false,
      "nodes": Array [],
      "value": undefined,
    },
  },
  "status": "finished",
  "value": undefined,
}
`;

exports[`Runtime error when redeclaring constant as function 2`] = `""`;

exports[`Runtime error when redeclaring constant as function 3`] = `
Object {
  "status": "error",
}
`;

exports[`Runtime error when redeclaring constant as function 4`] = `"Line 1: Redeclaring name f"`;

exports[`Runtime error when redeclaring constant as variable 1`] = `
Object {
  "context": Object {
    "chapter": 3,
    "debugger": Object {
      "observers": Object {
        "callbacks": Array [],
      },
      "state": Object {
        "it": Object {},
        "scheduler": PreemptiveScheduler {
          "steps": 1000,
        },
      },
      "status": false,
    },
    "errors": Array [],
    "externalContext": undefined,
    "externalSymbols": Array [],
    "runtime": Object {
      "break": false,
      "debuggerOn": true,
      "frames": Array [
        Object {
          "environment": Object {
            "Infinity": Infinity,
            "NaN": NaN,
            "accumulate": [Function],
            "append": [Function],
            "array_length": [Function],
            "build_list": [Function],
            "display": [Function],
            "draw_list": [Function],
            "enum_list": [Function],
            "equal": [Function],
            "error": [Function],
            "f": [Function],
            "filter": [Function],
            "for_each": [Function],
            "head": [Function],
            "is_array": [Function],
            "is_boolean": [Function],
            "is_function": [Function],
            "is_list": [Function],
            "is_null": [Function],
            "is_number": [Function],
            "is_pair": [Function],
            "is_string": [Function],
            "is_undefined": [Function],
            "length": [Function],
            "list": [Function],
            "list_ref": [Function],
            "list_to_string": [Function],
            "map": [Function],
            "math_E": 2.718281828459045,
            "math_LN10": 2.302585092994046,
            "math_LN2": 0.6931471805599453,
            "math_LOG10E": 0.4342944819032518,
            "math_LOG2E": 1.4426950408889634,
            "math_PI": 3.141592653589793,
            "math_SQRT1_2": 0.7071067811865476,
            "math_SQRT2": 1.4142135623730951,
            "math_abs": [Function],
            "math_acos": [Function],
            "math_acosh": [Function],
            "math_asin": [Function],
            "math_asinh": [Function],
            "math_atan": [Function],
            "math_atan2": [Function],
            "math_atanh": [Function],
            "math_cbrt": [Function],
            "math_ceil": [Function],
            "math_clz32": [Function],
            "math_cos": [Function],
            "math_cosh": [Function],
            "math_exp": [Function],
            "math_expm1": [Function],
            "math_floor": [Function],
            "math_fround": [Function],
            "math_hypot": [Function],
            "math_imul": [Function],
            "math_log": [Function],
            "math_log10": [Function],
            "math_log1p": [Function],
            "math_log2": [Function],
            "math_max": [Function],
            "math_min": [Function],
            "math_pow": [Function],
            "math_random": [Function],
            "math_round": [Function],
            "math_sign": [Function],
            "math_sin": [Function],
            "math_sinh": [Function],
            "math_sqrt": [Function],
            "math_tan": [Function],
            "math_tanh": [Function],
            "math_trunc": [Function],
            "member": [Function],
            "null": null,
            "pair": [Function],
            "parse_int": [Function],
            "prompt": [Function],
            "raw_display": [Function],
            "remove": [Function],
            "remove_all": [Function],
            "reverse": [Function],
            "runtime": [Function],
            "set_head": [Function],
            "set_tail": [Function],
            "stringify": [Function],
            "tail": [Function],
            "undefined": undefined,
          },
          "name": "global",
          "parent": null,
        },
      ],
      "isRunning": false,
      "nodes": Array [],
      "value": undefined,
    },
  },
  "status": "finished",
  "value": undefined,
}
`;

exports[`Runtime error when redeclaring constant as variable 2`] = `""`;

exports[`Runtime error when redeclaring constant as variable 3`] = `
Object {
  "status": "error",
}
`;

exports[`Runtime error when redeclaring constant as variable 4`] = `"Line 2: Redeclaring name f"`;

exports[`Runtime error when redeclaring function 1`] = `
Object {
  "context": Object {
    "chapter": 3,
    "debugger": Object {
      "observers": Object {
        "callbacks": Array [],
      },
      "state": Object {
        "it": Object {},
        "scheduler": PreemptiveScheduler {
          "steps": 1000,
        },
      },
      "status": false,
    },
    "errors": Array [],
    "externalContext": undefined,
    "externalSymbols": Array [],
    "runtime": Object {
      "break": false,
      "debuggerOn": true,
      "frames": Array [
        Object {
          "environment": Object {
            "Infinity": Infinity,
            "NaN": NaN,
            "accumulate": [Function],
            "append": [Function],
            "array_length": [Function],
            "build_list": [Function],
            "display": [Function],
            "draw_list": [Function],
            "enum_list": [Function],
            "equal": [Function],
            "error": [Function],
            "f": [Function],
            "filter": [Function],
            "for_each": [Function],
            "head": [Function],
            "is_array": [Function],
            "is_boolean": [Function],
            "is_function": [Function],
            "is_list": [Function],
            "is_null": [Function],
            "is_number": [Function],
            "is_pair": [Function],
            "is_string": [Function],
            "is_undefined": [Function],
            "length": [Function],
            "list": [Function],
            "list_ref": [Function],
            "list_to_string": [Function],
            "map": [Function],
            "math_E": 2.718281828459045,
            "math_LN10": 2.302585092994046,
            "math_LN2": 0.6931471805599453,
            "math_LOG10E": 0.4342944819032518,
            "math_LOG2E": 1.4426950408889634,
            "math_PI": 3.141592653589793,
            "math_SQRT1_2": 0.7071067811865476,
            "math_SQRT2": 1.4142135623730951,
            "math_abs": [Function],
            "math_acos": [Function],
            "math_acosh": [Function],
            "math_asin": [Function],
            "math_asinh": [Function],
            "math_atan": [Function],
            "math_atan2": [Function],
            "math_atanh": [Function],
            "math_cbrt": [Function],
            "math_ceil": [Function],
            "math_clz32": [Function],
            "math_cos": [Function],
            "math_cosh": [Function],
            "math_exp": [Function],
            "math_expm1": [Function],
            "math_floor": [Function],
            "math_fround": [Function],
            "math_hypot": [Function],
            "math_imul": [Function],
            "math_log": [Function],
            "math_log10": [Function],
            "math_log1p": [Function],
            "math_log2": [Function],
            "math_max": [Function],
            "math_min": [Function],
            "math_pow": [Function],
            "math_random": [Function],
            "math_round": [Function],
            "math_sign": [Function],
            "math_sin": [Function],
            "math_sinh": [Function],
            "math_sqrt": [Function],
            "math_tan": [Function],
            "math_tanh": [Function],
            "math_trunc": [Function],
            "member": [Function],
            "null": null,
            "pair": [Function],
            "parse_int": [Function],
            "prompt": [Function],
            "raw_display": [Function],
            "remove": [Function],
            "remove_all": [Function],
            "reverse": [Function],
            "runtime": [Function],
            "set_head": [Function],
            "set_tail": [Function],
            "stringify": [Function],
            "tail": [Function],
            "undefined": undefined,
          },
          "name": "global",
          "parent": null,
        },
      ],
      "isRunning": false,
      "nodes": Array [],
      "value": undefined,
    },
  },
  "status": "finished",
  "value": undefined,
}
`;

exports[`Runtime error when redeclaring function 2`] = `""`;

exports[`Runtime error when redeclaring function 3`] = `
Object {
  "status": "error",
}
`;

exports[`Runtime error when redeclaring function 4`] = `"Line 1: Redeclaring name f"`;

exports[`Runtime error when redeclaring function as constant 1`] = `
Object {
  "context": Object {
    "chapter": 3,
    "debugger": Object {
      "observers": Object {
        "callbacks": Array [],
      },
      "state": Object {
        "it": Object {},
        "scheduler": PreemptiveScheduler {
          "steps": 1000,
        },
      },
      "status": false,
    },
    "errors": Array [],
    "externalContext": undefined,
    "externalSymbols": Array [],
    "runtime": Object {
      "break": false,
      "debuggerOn": true,
      "frames": Array [
        Object {
          "environment": Object {
            "Infinity": Infinity,
            "NaN": NaN,
            "accumulate": [Function],
            "append": [Function],
            "array_length": [Function],
            "build_list": [Function],
            "display": [Function],
            "draw_list": [Function],
            "enum_list": [Function],
            "equal": [Function],
            "error": [Function],
            "f": [Function],
            "filter": [Function],
            "for_each": [Function],
            "head": [Function],
            "is_array": [Function],
            "is_boolean": [Function],
            "is_function": [Function],
            "is_list": [Function],
            "is_null": [Function],
            "is_number": [Function],
            "is_pair": [Function],
            "is_string": [Function],
            "is_undefined": [Function],
            "length": [Function],
            "list": [Function],
            "list_ref": [Function],
            "list_to_string": [Function],
            "map": [Function],
            "math_E": 2.718281828459045,
            "math_LN10": 2.302585092994046,
            "math_LN2": 0.6931471805599453,
            "math_LOG10E": 0.4342944819032518,
            "math_LOG2E": 1.4426950408889634,
            "math_PI": 3.141592653589793,
            "math_SQRT1_2": 0.7071067811865476,
            "math_SQRT2": 1.4142135623730951,
            "math_abs": [Function],
            "math_acos": [Function],
            "math_acosh": [Function],
            "math_asin": [Function],
            "math_asinh": [Function],
            "math_atan": [Function],
            "math_atan2": [Function],
            "math_atanh": [Function],
            "math_cbrt": [Function],
            "math_ceil": [Function],
            "math_clz32": [Function],
            "math_cos": [Function],
            "math_cosh": [Function],
            "math_exp": [Function],
            "math_expm1": [Function],
            "math_floor": [Function],
            "math_fround": [Function],
            "math_hypot": [Function],
            "math_imul": [Function],
            "math_log": [Function],
            "math_log10": [Function],
            "math_log1p": [Function],
            "math_log2": [Function],
            "math_max": [Function],
            "math_min": [Function],
            "math_pow": [Function],
            "math_random": [Function],
            "math_round": [Function],
            "math_sign": [Function],
            "math_sin": [Function],
            "math_sinh": [Function],
            "math_sqrt": [Function],
            "math_tan": [Function],
            "math_tanh": [Function],
            "math_trunc": [Function],
            "member": [Function],
            "null": null,
            "pair": [Function],
            "parse_int": [Function],
            "prompt": [Function],
            "raw_display": [Function],
            "remove": [Function],
            "remove_all": [Function],
            "reverse": [Function],
            "runtime": [Function],
            "set_head": [Function],
            "set_tail": [Function],
            "stringify": [Function],
            "tail": [Function],
            "undefined": undefined,
          },
          "name": "global",
          "parent": null,
        },
      ],
      "isRunning": false,
      "nodes": Array [],
      "value": undefined,
    },
  },
  "status": "finished",
  "value": undefined,
}
`;

exports[`Runtime error when redeclaring function as constant 2`] = `""`;

exports[`Runtime error when redeclaring function as constant 3`] = `
Object {
  "status": "error",
}
`;

exports[`Runtime error when redeclaring function as constant 4`] = `"Line 2: Redeclaring name f"`;

exports[`Runtime error when redeclaring function as variable 1`] = `
Object {
  "context": Object {
    "chapter": 3,
    "debugger": Object {
      "observers": Object {
        "callbacks": Array [],
      },
      "state": Object {
        "it": Object {},
        "scheduler": PreemptiveScheduler {
          "steps": 1000,
        },
      },
      "status": false,
    },
    "errors": Array [],
    "externalContext": undefined,
    "externalSymbols": Array [],
    "runtime": Object {
      "break": false,
      "debuggerOn": true,
      "frames": Array [
        Object {
          "environment": Object {
            "Infinity": Infinity,
            "NaN": NaN,
            "accumulate": [Function],
            "append": [Function],
            "array_length": [Function],
            "build_list": [Function],
            "display": [Function],
            "draw_list": [Function],
            "enum_list": [Function],
            "equal": [Function],
            "error": [Function],
            "f": [Function],
            "filter": [Function],
            "for_each": [Function],
            "head": [Function],
            "is_array": [Function],
            "is_boolean": [Function],
            "is_function": [Function],
            "is_list": [Function],
            "is_null": [Function],
            "is_number": [Function],
            "is_pair": [Function],
            "is_string": [Function],
            "is_undefined": [Function],
            "length": [Function],
            "list": [Function],
            "list_ref": [Function],
            "list_to_string": [Function],
            "map": [Function],
            "math_E": 2.718281828459045,
            "math_LN10": 2.302585092994046,
            "math_LN2": 0.6931471805599453,
            "math_LOG10E": 0.4342944819032518,
            "math_LOG2E": 1.4426950408889634,
            "math_PI": 3.141592653589793,
            "math_SQRT1_2": 0.7071067811865476,
            "math_SQRT2": 1.4142135623730951,
            "math_abs": [Function],
            "math_acos": [Function],
            "math_acosh": [Function],
            "math_asin": [Function],
            "math_asinh": [Function],
            "math_atan": [Function],
            "math_atan2": [Function],
            "math_atanh": [Function],
            "math_cbrt": [Function],
            "math_ceil": [Function],
            "math_clz32": [Function],
            "math_cos": [Function],
            "math_cosh": [Function],
            "math_exp": [Function],
            "math_expm1": [Function],
            "math_floor": [Function],
            "math_fround": [Function],
            "math_hypot": [Function],
            "math_imul": [Function],
            "math_log": [Function],
            "math_log10": [Function],
            "math_log1p": [Function],
            "math_log2": [Function],
            "math_max": [Function],
            "math_min": [Function],
            "math_pow": [Function],
            "math_random": [Function],
            "math_round": [Function],
            "math_sign": [Function],
            "math_sin": [Function],
            "math_sinh": [Function],
            "math_sqrt": [Function],
            "math_tan": [Function],
            "math_tanh": [Function],
            "math_trunc": [Function],
            "member": [Function],
            "null": null,
            "pair": [Function],
            "parse_int": [Function],
            "prompt": [Function],
            "raw_display": [Function],
            "remove": [Function],
            "remove_all": [Function],
            "reverse": [Function],
            "runtime": [Function],
            "set_head": [Function],
            "set_tail": [Function],
            "stringify": [Function],
            "tail": [Function],
            "undefined": undefined,
          },
          "name": "global",
          "parent": null,
        },
      ],
      "isRunning": false,
      "nodes": Array [],
      "value": undefined,
    },
  },
  "status": "finished",
  "value": undefined,
}
`;

exports[`Runtime error when redeclaring function as variable 2`] = `""`;

exports[`Runtime error when redeclaring function as variable 3`] = `
Object {
  "status": "error",
}
`;

exports[`Runtime error when redeclaring function as variable 4`] = `"Line 2: Redeclaring name f"`;

exports[`Runtime error when redeclaring variable 1`] = `
Object {
  "context": Object {
    "chapter": 3,
    "debugger": Object {
      "observers": Object {
        "callbacks": Array [],
      },
      "state": Object {
        "it": Object {},
        "scheduler": PreemptiveScheduler {
          "steps": 1000,
        },
      },
      "status": false,
    },
    "errors": Array [],
    "externalContext": undefined,
    "externalSymbols": Array [],
    "runtime": Object {
      "break": false,
      "debuggerOn": true,
      "frames": Array [
        Object {
          "environment": Object {
            "Infinity": Infinity,
            "NaN": NaN,
            "accumulate": [Function],
            "append": [Function],
            "array_length": [Function],
            "build_list": [Function],
            "display": [Function],
            "draw_list": [Function],
            "enum_list": [Function],
            "equal": [Function],
            "error": [Function],
            "f": [Function],
            "filter": [Function],
            "for_each": [Function],
            "head": [Function],
            "is_array": [Function],
            "is_boolean": [Function],
            "is_function": [Function],
            "is_list": [Function],
            "is_null": [Function],
            "is_number": [Function],
            "is_pair": [Function],
            "is_string": [Function],
            "is_undefined": [Function],
            "length": [Function],
            "list": [Function],
            "list_ref": [Function],
            "list_to_string": [Function],
            "map": [Function],
            "math_E": 2.718281828459045,
            "math_LN10": 2.302585092994046,
            "math_LN2": 0.6931471805599453,
            "math_LOG10E": 0.4342944819032518,
            "math_LOG2E": 1.4426950408889634,
            "math_PI": 3.141592653589793,
            "math_SQRT1_2": 0.7071067811865476,
            "math_SQRT2": 1.4142135623730951,
            "math_abs": [Function],
            "math_acos": [Function],
            "math_acosh": [Function],
            "math_asin": [Function],
            "math_asinh": [Function],
            "math_atan": [Function],
            "math_atan2": [Function],
            "math_atanh": [Function],
            "math_cbrt": [Function],
            "math_ceil": [Function],
            "math_clz32": [Function],
            "math_cos": [Function],
            "math_cosh": [Function],
            "math_exp": [Function],
            "math_expm1": [Function],
            "math_floor": [Function],
            "math_fround": [Function],
            "math_hypot": [Function],
            "math_imul": [Function],
            "math_log": [Function],
            "math_log10": [Function],
            "math_log1p": [Function],
            "math_log2": [Function],
            "math_max": [Function],
            "math_min": [Function],
            "math_pow": [Function],
            "math_random": [Function],
            "math_round": [Function],
            "math_sign": [Function],
            "math_sin": [Function],
            "math_sinh": [Function],
            "math_sqrt": [Function],
            "math_tan": [Function],
            "math_tanh": [Function],
            "math_trunc": [Function],
            "member": [Function],
            "null": null,
            "pair": [Function],
            "parse_int": [Function],
            "prompt": [Function],
            "raw_display": [Function],
            "remove": [Function],
            "remove_all": [Function],
            "reverse": [Function],
            "runtime": [Function],
            "set_head": [Function],
            "set_tail": [Function],
            "stringify": [Function],
            "tail": [Function],
            "undefined": undefined,
          },
          "name": "global",
          "parent": null,
        },
      ],
      "isRunning": false,
      "nodes": Array [],
      "value": undefined,
    },
  },
  "status": "finished",
  "value": undefined,
}
`;

exports[`Runtime error when redeclaring variable 2`] = `""`;

exports[`Runtime error when redeclaring variable 3`] = `
Object {
  "status": "error",
}
`;

exports[`Runtime error when redeclaring variable 4`] = `"Line 2: Redeclaring name f"`;

exports[`Runtime error when redeclaring variable as constant 1`] = `
Object {
  "context": Object {
    "chapter": 3,
    "debugger": Object {
      "observers": Object {
        "callbacks": Array [],
      },
      "state": Object {
        "it": Object {},
        "scheduler": PreemptiveScheduler {
          "steps": 1000,
        },
      },
      "status": false,
    },
    "errors": Array [],
    "externalContext": undefined,
    "externalSymbols": Array [],
    "runtime": Object {
      "break": false,
      "debuggerOn": true,
      "frames": Array [
        Object {
          "environment": Object {
            "Infinity": Infinity,
            "NaN": NaN,
            "accumulate": [Function],
            "append": [Function],
            "array_length": [Function],
            "build_list": [Function],
            "display": [Function],
            "draw_list": [Function],
            "enum_list": [Function],
            "equal": [Function],
            "error": [Function],
            "f": [Function],
            "filter": [Function],
            "for_each": [Function],
            "head": [Function],
            "is_array": [Function],
            "is_boolean": [Function],
            "is_function": [Function],
            "is_list": [Function],
            "is_null": [Function],
            "is_number": [Function],
            "is_pair": [Function],
            "is_string": [Function],
            "is_undefined": [Function],
            "length": [Function],
            "list": [Function],
            "list_ref": [Function],
            "list_to_string": [Function],
            "map": [Function],
            "math_E": 2.718281828459045,
            "math_LN10": 2.302585092994046,
            "math_LN2": 0.6931471805599453,
            "math_LOG10E": 0.4342944819032518,
            "math_LOG2E": 1.4426950408889634,
            "math_PI": 3.141592653589793,
            "math_SQRT1_2": 0.7071067811865476,
            "math_SQRT2": 1.4142135623730951,
            "math_abs": [Function],
            "math_acos": [Function],
            "math_acosh": [Function],
            "math_asin": [Function],
            "math_asinh": [Function],
            "math_atan": [Function],
            "math_atan2": [Function],
            "math_atanh": [Function],
            "math_cbrt": [Function],
            "math_ceil": [Function],
            "math_clz32": [Function],
            "math_cos": [Function],
            "math_cosh": [Function],
            "math_exp": [Function],
            "math_expm1": [Function],
            "math_floor": [Function],
            "math_fround": [Function],
            "math_hypot": [Function],
            "math_imul": [Function],
            "math_log": [Function],
            "math_log10": [Function],
            "math_log1p": [Function],
            "math_log2": [Function],
            "math_max": [Function],
            "math_min": [Function],
            "math_pow": [Function],
            "math_random": [Function],
            "math_round": [Function],
            "math_sign": [Function],
            "math_sin": [Function],
            "math_sinh": [Function],
            "math_sqrt": [Function],
            "math_tan": [Function],
            "math_tanh": [Function],
            "math_trunc": [Function],
            "member": [Function],
            "null": null,
            "pair": [Function],
            "parse_int": [Function],
            "prompt": [Function],
            "raw_display": [Function],
            "remove": [Function],
            "remove_all": [Function],
            "reverse": [Function],
            "runtime": [Function],
            "set_head": [Function],
            "set_tail": [Function],
            "stringify": [Function],
            "tail": [Function],
            "undefined": undefined,
          },
          "name": "global",
          "parent": null,
        },
      ],
      "isRunning": false,
      "nodes": Array [],
      "value": undefined,
    },
  },
  "status": "finished",
  "value": undefined,
}
`;

exports[`Runtime error when redeclaring variable as constant 2`] = `""`;

exports[`Runtime error when redeclaring variable as constant 3`] = `
Object {
  "status": "error",
}
`;

exports[`Runtime error when redeclaring variable as constant 4`] = `"Line 2: Redeclaring name f"`;

exports[`Runtime error when redeclaring variable as function 1`] = `
Object {
  "context": Object {
    "chapter": 3,
    "debugger": Object {
      "observers": Object {
        "callbacks": Array [],
      },
      "state": Object {
        "it": Object {},
        "scheduler": PreemptiveScheduler {
          "steps": 1000,
        },
      },
      "status": false,
    },
    "errors": Array [],
    "externalContext": undefined,
    "externalSymbols": Array [],
    "runtime": Object {
      "break": false,
      "debuggerOn": true,
      "frames": Array [
        Object {
          "environment": Object {
            "Infinity": Infinity,
            "NaN": NaN,
            "accumulate": [Function],
            "append": [Function],
            "array_length": [Function],
            "build_list": [Function],
            "display": [Function],
            "draw_list": [Function],
            "enum_list": [Function],
            "equal": [Function],
            "error": [Function],
            "f": [Function],
            "filter": [Function],
            "for_each": [Function],
            "head": [Function],
            "is_array": [Function],
            "is_boolean": [Function],
            "is_function": [Function],
            "is_list": [Function],
            "is_null": [Function],
            "is_number": [Function],
            "is_pair": [Function],
            "is_string": [Function],
            "is_undefined": [Function],
            "length": [Function],
            "list": [Function],
            "list_ref": [Function],
            "list_to_string": [Function],
            "map": [Function],
            "math_E": 2.718281828459045,
            "math_LN10": 2.302585092994046,
            "math_LN2": 0.6931471805599453,
            "math_LOG10E": 0.4342944819032518,
            "math_LOG2E": 1.4426950408889634,
            "math_PI": 3.141592653589793,
            "math_SQRT1_2": 0.7071067811865476,
            "math_SQRT2": 1.4142135623730951,
            "math_abs": [Function],
            "math_acos": [Function],
            "math_acosh": [Function],
            "math_asin": [Function],
            "math_asinh": [Function],
            "math_atan": [Function],
            "math_atan2": [Function],
            "math_atanh": [Function],
            "math_cbrt": [Function],
            "math_ceil": [Function],
            "math_clz32": [Function],
            "math_cos": [Function],
            "math_cosh": [Function],
            "math_exp": [Function],
            "math_expm1": [Function],
            "math_floor": [Function],
            "math_fround": [Function],
            "math_hypot": [Function],
            "math_imul": [Function],
            "math_log": [Function],
            "math_log10": [Function],
            "math_log1p": [Function],
            "math_log2": [Function],
            "math_max": [Function],
            "math_min": [Function],
            "math_pow": [Function],
            "math_random": [Function],
            "math_round": [Function],
            "math_sign": [Function],
            "math_sin": [Function],
            "math_sinh": [Function],
            "math_sqrt": [Function],
            "math_tan": [Function],
            "math_tanh": [Function],
            "math_trunc": [Function],
            "member": [Function],
            "null": null,
            "pair": [Function],
            "parse_int": [Function],
            "prompt": [Function],
            "raw_display": [Function],
            "remove": [Function],
            "remove_all": [Function],
            "reverse": [Function],
            "runtime": [Function],
            "set_head": [Function],
            "set_tail": [Function],
            "stringify": [Function],
            "tail": [Function],
            "undefined": undefined,
          },
          "name": "global",
          "parent": null,
        },
      ],
      "isRunning": false,
      "nodes": Array [],
      "value": undefined,
    },
  },
  "status": "finished",
  "value": undefined,
}
`;

exports[`Runtime error when redeclaring variable as function 2`] = `""`;

exports[`Runtime error when redeclaring variable as function 3`] = `
Object {
  "status": "error",
}
`;

exports[`Runtime error when redeclaring variable as function 4`] = `"Line 1: Redeclaring name f"`;

exports[`Type error when accessing property of function: expectParsedError 1`] = `
Object {
  "alertResult": Array [],
  "code": "function f() {
  return 1;
}
f.prototype;",
  "displayResult": Array [],
  "errors": Array [
    TypeError {
      "expected": "object or array",
      "got": "function",
      "location": SourceLocation {
        "end": Position {
          "column": 11,
          "line": 4,
        },
        "start": Position {
          "column": 0,
          "line": 4,
        },
      },
      "severity": "Error",
      "side": "",
      "type": "Runtime",
    },
  ],
  "parsedErrors": "Line 4: Expected object or array, got function.",
  "result": undefined,
  "resultStatus": "error",
  "visualiseListResult": Array [],
}
`;

exports[`Type error when accessing property of null: expectParsedError 1`] = `
Object {
  "alertResult": Array [],
  "code": "null.prop;",
  "displayResult": Array [],
  "errors": Array [
    TypeError {
      "expected": "object or array",
      "got": "null",
      "location": SourceLocation {
        "end": Position {
          "column": 9,
          "line": 1,
        },
        "start": Position {
          "column": 0,
          "line": 1,
        },
      },
      "severity": "Error",
      "side": "",
      "type": "Runtime",
    },
  ],
  "parsedErrors": "Line 1: Expected object or array, got null.",
  "result": undefined,
  "resultStatus": "error",
  "visualiseListResult": Array [],
}
`;

exports[`Type error when accessing property of string: expectParsedError 1`] = `
Object {
  "alertResult": Array [],
  "code": "'hi'.length;",
  "displayResult": Array [],
  "errors": Array [
    TypeError {
      "expected": "object or array",
      "got": "string",
      "location": SourceLocation {
        "end": Position {
          "column": 11,
          "line": 1,
        },
        "start": Position {
          "column": 0,
          "line": 1,
        },
      },
      "severity": "Error",
      "side": "",
      "type": "Runtime",
    },
  ],
  "parsedErrors": "Line 1: Expected object or array, got string.",
  "result": undefined,
  "resultStatus": "error",
  "visualiseListResult": Array [],
}
`;

exports[`Type error when assigning property of function: expectParsedError 1`] = `
Object {
  "alertResult": Array [],
  "code": "function f() {
  return 1;
}
f.prop = 5;",
  "displayResult": Array [],
  "errors": Array [
    TypeError {
      "expected": "object or array",
      "got": "function",
      "location": SourceLocation {
        "end": Position {
          "column": 10,
          "line": 4,
        },
        "start": Position {
          "column": 0,
          "line": 4,
        },
      },
      "severity": "Error",
      "side": "",
      "type": "Runtime",
    },
  ],
  "parsedErrors": "Line 4: Expected object or array, got function.",
  "result": undefined,
  "resultStatus": "error",
  "visualiseListResult": Array [],
}
`;

exports[`Type error when assigning property of string: expectParsedError 1`] = `
Object {
  "alertResult": Array [],
  "code": "'hi'.prop = 5;",
  "displayResult": Array [],
  "errors": Array [
    TypeError {
      "expected": "object or array",
      "got": "string",
      "location": SourceLocation {
        "end": Position {
          "column": 13,
          "line": 1,
        },
        "start": Position {
          "column": 0,
          "line": 1,
        },
      },
      "severity": "Error",
      "side": "",
      "type": "Runtime",
    },
  ],
  "parsedErrors": "Line 1: Expected object or array, got string.",
  "result": undefined,
  "resultStatus": "error",
  "visualiseListResult": Array [],
}
`;

exports[`Undefined variable error is thrown: expectParsedError 1`] = `
Object {
  "alertResult": Array [],
  "code": "im_undefined;",
  "displayResult": Array [],
  "errors": Array [
    UndefinedVariable {
      "location": SourceLocation {
        "end": Position {
          "column": 12,
          "line": 1,
        },
        "start": Position {
          "column": 0,
          "line": 1,
        },
      },
      "name": "im_undefined",
      "severity": "Error",
      "type": "Runtime",
    },
  ],
  "parsedErrors": "Line 1: Name im_undefined not declared",
  "result": undefined,
  "resultStatus": "error",
  "visualiseListResult": Array [],
}
`;
